///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SWA_1_6_5_Release_Specific_Test_cases
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The SQLWA873_Onperformingsamelevelofdrilldown recording.
    /// </summary>
    [TestModule("22b2b08e-ce9c-4fa2-963d-d4ae3d80a6dc", ModuleType.Recording, 1)]
    public partial class SQLWA873_Onperformingsamelevelofdrilldown : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SWA_1_6_5_Release_Specific_Test_casesRepository repository.
        /// </summary>
        public static SWA_1_6_5_Release_Specific_Test_casesRepository repo = SWA_1_6_5_Release_Specific_Test_casesRepository.Instance;

        static SQLWA873_Onperformingsamelevelofdrilldown instance = new SQLWA873_Onperformingsamelevelofdrilldown();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public SQLWA873_Onperformingsamelevelofdrilldown()
        {
            Url = "https://10.220.201.28:9291";
            Username = "simpsons\\administrator";
            Password = "control*88";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static SQLWA873_Onperformingsamelevelofdrilldown Instance
        {
            get { return instance; }
        }

#region Variables

        string _Url;

        /// <summary>
        /// Gets or sets the value of variable Url.
        /// </summary>
        [TestVariable("a2069788-7e8a-412a-aaa8-12fc965cd984")]
        public string Url
        {
            get { return _Url; }
            set { _Url = value; }
        }

        string _Username;

        /// <summary>
        /// Gets or sets the value of variable Username.
        /// </summary>
        [TestVariable("20b67fad-a189-4c38-976a-adb207f442ea")]
        public string Username
        {
            get { return _Username; }
            set { _Username = value; }
        }

        string _Password;

        /// <summary>
        /// Gets or sets the value of variable Password.
        /// </summary>
        [TestVariable("4a125eb1-ee64-4a4f-81f3-0666d394b7af")]
        public string Password
        {
            get { return _Password; }
            set { _Password = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            CommonUtilities.SWAWebCommon.Login(Url, Username, Password);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", "Successfully Logged in", new RecordItemIndex(1));
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking PerformClick() on item 'IderaDashboard.TMxPe'.", repo.IderaDashboard.TMxPeInfo, new RecordItemIndex(2));
            repo.IderaDashboard.TMxPe.PerformClick();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(3));
            Delay.Duration(10000, false);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking PerformClick() on item 'IderaDashboard.TMxPo'.", repo.IderaDashboard.TMxPoInfo, new RecordItemIndex(4));
            repo.IderaDashboard.TMxPo.PerformClick();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(5));
            Delay.Duration(10000, false);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking PerformClick() on item 'Https10220201289291Gui460Rende.BA4Qi2.Swa165w101'.", repo.Https10220201289291Gui460Rende.BA4Qi2.Swa165w101Info, new RecordItemIndex(6));
            repo.Https10220201289291Gui460Rende.BA4Qi2.Swa165w101.PerformClick();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", "Navigated to Workload menu", new RecordItemIndex(7));
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking PerformClick() on item 'Https10220201289291Gui460Rende.GI1Wi2.TimeframeButton4W'.", repo.Https10220201289291Gui460Rende.GI1Wi2.TimeframeButton4WInfo, new RecordItemIndex(8));
            repo.Https10220201289291Gui460Rende.GI1Wi2.TimeframeButton4W.PerformClick();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'Https10220201289291Gui460Rende.BA4Qi2.TopMachines'.", repo.Https10220201289291Gui460Rende.BA4Qi2.TopMachinesInfo, new RecordItemIndex(9));
            Validate.Exists(repo.Https10220201289291Gui460Rende.BA4Qi2.TopMachinesInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(10));
            Delay.Duration(10000, false);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking PerformClick() on item 'Https10220201289291Gui460Rende.BA4Qi2.Swa165w101'.", repo.Https10220201289291Gui460Rende.BA4Qi2.Swa165w101Info, new RecordItemIndex(11));
            repo.Https10220201289291Gui460Rende.BA4Qi2.Swa165w101.PerformClick();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'Https10220201289291Gui460Rende.BA4Qi2.TopPrograms'.", repo.Https10220201289291Gui460Rende.BA4Qi2.TopProgramsInfo, new RecordItemIndex(12));
            Validate.Exists(repo.Https10220201289291Gui460Rende.BA4Qi2.TopProgramsInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking PerformClick() on item 'Https10220201289291Gui460Rende.BA4Qi2.SQLServerAgentJobs'.", repo.Https10220201289291Gui460Rende.BA4Qi2.SQLServerAgentJobsInfo, new RecordItemIndex(13));
            repo.Https10220201289291Gui460Rende.BA4Qi2.SQLServerAgentJobs.PerformClick();
            Delay.Milliseconds(0);
            
            // STEP 10: Under Top Program View : Top SQL Statements Shown
            Report.Log(ReportLevel.Info, "Section", "STEP 10: Under Top Program View : Top SQL Statements Shown", new RecordItemIndex(14));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Top Programs') on item 'Https10220201289291Gui460Rende.BA4Qi2.LeftHeader'.", repo.Https10220201289291Gui460Rende.BA4Qi2.LeftHeaderInfo, new RecordItemIndex(15));
            Validate.AttributeEqual(repo.Https10220201289291Gui460Rende.BA4Qi2.LeftHeaderInfo, "InnerText", "Top Programs");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'Https10220201289291Gui460Rende.BA4Qi2.TopSQLStatements'.", repo.Https10220201289291Gui460Rende.BA4Qi2.TopSQLStatementsInfo, new RecordItemIndex(16));
            Validate.Exists(repo.Https10220201289291Gui460Rende.BA4Qi2.TopSQLStatementsInfo);
            Delay.Milliseconds(100);
            
            // STEP 11: Clicke on SQL Statement for Top SQL Statements
            Report.Log(ReportLevel.Info, "Section", "STEP 11: Clicke on SQL Statement for Top SQL Statements", new RecordItemIndex(17));
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking PerformClick() on item 'Https10220201289291Gui460Rende.BA4Qi2.XpServicecontrol'.", repo.Https10220201289291Gui460Rende.BA4Qi2.XpServicecontrolInfo, new RecordItemIndex(18));
            repo.Https10220201289291Gui460Rende.BA4Qi2.XpServicecontrol.PerformClick();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'Https10220201289291Gui460Rende.BA4Qi2.SQLSTATEMENTFULLTEXT'.", repo.Https10220201289291Gui460Rende.BA4Qi2.SQLSTATEMENTFULLTEXTInfo, new RecordItemIndex(19));
            Validate.Exists(repo.Https10220201289291Gui460Rende.BA4Qi2.SQLSTATEMENTFULLTEXTInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'Https10220201289291Gui460Rende.BA4Qi2.XpServicecontrol1'.", repo.Https10220201289291Gui460Rende.BA4Qi2.XpServicecontrol1Info, new RecordItemIndex(20));
            Validate.Exists(repo.Https10220201289291Gui460Rende.BA4Qi2.XpServicecontrol1Info);
            Delay.Milliseconds(100);
            
            // STEP 13: On Further drilling down Click on Login name from Top Logins
            Report.Log(ReportLevel.Info, "Section", "STEP 13: On Further drilling down Click on Login name from Top Logins", new RecordItemIndex(21));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'Https10220201289291Gui460Rende.BA4Qi2.TopLogins'.", repo.Https10220201289291Gui460Rende.BA4Qi2.TopLoginsInfo, new RecordItemIndex(22));
            Validate.Exists(repo.Https10220201289291Gui460Rende.BA4Qi2.TopLoginsInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking PerformClick() on item 'Https10220201289291Gui460Rende.BA4Qi2.SIMPSONSAdministrator'.", repo.Https10220201289291Gui460Rende.BA4Qi2.SIMPSONSAdministratorInfo, new RecordItemIndex(23));
            repo.Https10220201289291Gui460Rende.BA4Qi2.SIMPSONSAdministrator.PerformClick();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Top Logins') on item 'Https10220201289291Gui460Rende.BA4Qi2.LeftHeader1'.", repo.Https10220201289291Gui460Rende.BA4Qi2.LeftHeader1Info, new RecordItemIndex(24));
            Validate.AttributeEqual(repo.Https10220201289291Gui460Rende.BA4Qi2.LeftHeader1Info, "InnerText", "Top Logins");
            Delay.Milliseconds(100);
            
            CommonUtilities.SWAWebCommon.Logout();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
